
# Submission Commands

Submisison of annotations with an assembly appears to be a complex process.
If a genome is to be submitted without annotation then all that is needed is the
fasta file containing the assembled contigs. If an annotated genome is to be
submitted then a number of processing steps are required before submission. The
fasta file of contigs and the gff file of annotations must be combined to form a
.asn file. The program that does this conversion (tbl2asn) requires the fasta
files and gff files to be formatted correctly. In the case of the gff file, this
means parsing it to a .tbl file.

The commands used to parse these files and prepare the F. oxysporum f. sp.
narcissi genome for submisson are shown below.



# Preliminary submission

A Bioproject and biosample number was prepared for the genome submission at:
https://submit.ncbi.nlm.nih.gov

A preliminary submission was made for the .fasta assembly to check if
any contigs needed to be split. This step was performed early in the annotation
process (prior to gene prediction) to ensure that annotation did not have to
be repeated at the end of the project.


The following note was provided in the WGS submission page on NCBI in the box
labeled "Private comments to NCBI staff":

```
I have been advised to submit my assemblies to NCBI early in my submission process to ensure that my contigs pass the contamination screen. This assembly will be revised as appropriate, including renaming of contigs where needed. Please allow me to modify this submission at a later date, including upload of the final gene models.

'For future submissions, you could send us the fasta files early
in the submission process so we can run them through our foreign
contamination screen. We will let you know if we find any
sequences to exclude or trim before you generate your final
WGS submission.'...'*IMPORTANT* Include a comment that you are submitting
the fasta files to be screened by the contamination screen
prior to creating your final annotated submission.'
```


# Submission of sequence data to SRA

Reads were submitted to the SRA at https://submit.ncbi.nlm.nih.gov/subs/sra/ .
To do this, a metadata file was provided detailing each of the files in the
bioproject. The file was downloaded in excel format and edited manually. A copy
of the edited file and the final .tsv file is present at:

```bash
  ls genome_submission/SRA_metadata_acc.txt genome_submission/SRA_metadata_acc.xlsx
```

As these files included a file > 500 Mb, a presubmission folder was requested.
This aids submission of large data files. This file was created on the ftp server
at ftp-private.ncbi.nlm.nih.gov, with a private folder named
uploads/andrew.armitage@emr.ac.uk_6L2oakBI. Ncbi provided a username a password.
Files were uploaded into a folder created within my preload folder using ftp.

```bash
	# Bioproject="PRJNA344737"
	SubFolder="Vd12008_PRJNA344737"
	mkdir $SubFolder
	for Read in $(ls raw_dna/paired/*/*/*/*.fastq.gz); do
	  echo $Read;
	  cp $Read $SubFolder/.
	done
	cp raw_dna/pacbio/*/*/extracted/gz/concatenated_pacbio.fastq.gz $SubFolder/.
	cd $SubFolder
	# gzip concatenated_pacbio.fastq
	ftp ftp-private.ncbi.nlm.nih.gov
	cd uploads/rong.fan@emr.ac.uk_sYFJ25rv
	mkdir Vd12008_PRJNA344737
	cd Vd12008_PRJNA344737
	# put Vd12008_PRJNA344737
	prompt
	mput *
	bye
	cd ../
	rm -r $SubFolder
```

For WGS
# Calculate coverage using the count_nucl.pl script

## For one library

```bash
for DataDir in $(ls -d qc_dna/paired/*/*)
do
    F_Read=$(ls $DataDir/F/*.gz)
    R_Read=$(ls $DataDir/R/*.gz)
    Strain=$(echo $DataDir | rev | cut -f1 -d '/' | rev)
    Organism=$(echo $DataDir | rev | cut -f2 -d '/' | rev)
    WorkDir=tmp_dir/$Strain
    mkdir -p $WorkDir
    cp -r $F_Read $WorkDir
    cp -r $R_Read $WorkDir
    cd $WorkDir
    Read1=*R1*
    Read2=*R2*
    gunzip $Read1
    gunzip $Read2
    Sub1=*R1*.fq
    Sub2=*R2*.fq
    echo "$Organism - $Strain"
    count_nucl.pl -i $Sub1 -i $Sub2 -g 35
    cd /home/groups/harrisonlab/project_files/verticillium_dahliae/pathogenomics
done
```
```````````````````````````````````````````````````````````````````````````
			V.dahliae - 12008
			The estimated genome size is: 35000000 bp


			The input file is: Vd12008_S1_L001_R1_001_trim.fq

			Results for: Vd12008_S1_L001_R1_001_trim.fq
			 Within this file of 1192143533 bp there were 4722428 fastq sequences
			 of these 0 lines were empty.


			The input file is: Vd12008_S1_L001_R2_001_trim.fq

			Results for: Vd12008_S1_L001_R2_001_trim.fq
			 Within this file of 1136947554 bp there were 4722428 fastq sequences
			 of these 0 lines were empty.



			Total results:

			 There are a total of 2329091087 nucleotides in this file.

			 This equates to an estimated genome coverage of 66.55 .
```````````````````````````````````````````````````````````````````````````
## For PacBio data

```bash
count_nucl.pl -i raw_dna/pacbio/*/*/extracted/concatenated_pacbio.fastq -g 35
```
```````````````````````````````````````````````````````````````````````````
			results:
			The estimated genome size is: 35000000 bp


			The input file is: raw_dna/pacbio/V.dahliae/12008/extracted/concatenated_pacbio.fastq


			Results for: raw_dna/pacbio/V.dahliae/12008/extracted/concatenated_pacbio.fastq
			 Within this file of 3755996917 bp there were 610703 fastq sequences
			 of these 0 lines were empty.



			Total results:

			 There are a total of 3755996917 nucleotides in this file.

			 This equates to an estimated genome coverage of 107.31 .
```````````````````````````````````````````````````````````````````````````

# Final Submission

These commands were used in the final submission of the VD_12008 genome:


## Output directory
An output and working directory was made for genome submission:

```bash
ProjDir=/home/groups/harrisonlab/project_files/verticillium_dahliae/pathogenomics
cd $ProjDir
OutDir="genome_submission/V.dahliae/12008"
  mkdir -p $OutDir
```
## SbtFile
The genbank submission template tool was used at:
http://www.ncbi.nlm.nih.gov/WebSub/template.cgi
This produce a template file detailing the submission.

## Setting varibales
Vairables containing locations of files and options for scripts were set:

```bash
# Program locations:
AnnieDir="/home/armita/prog/annie/genomeannotation-annie-c1e848b"
ProgDir="/home/armita/git_repos/emr_repos/tools/genbank_submission"
# File locations:
SbtFile=$(ls $OutDir/template.sbt)
Assembly=$(ls repeat_masked/V.dahliae/12008/ncbi_filtered_contigs_repmask/12008_contigs_unmasked.fa)
InterProTab=$(ls gene_pred/interproscan/V.dahliae/12008/12008_interproscan.tsv)
SwissProtBlast=$(ls gene_pred/swissprot/V.dahliae/12008/swissprot_vJul2016_tophit_parsed.tbl)
SwissProtFasta=$(ls /home/groups/harrisonlab/uniprot/swissprot/uniprot_sprot.fasta)
GffFile=$(ls gene_pred/final_genes/V.dahliae/12008/final/final_genes_appended.gff3)
# tbl2asn options:
Organism="Verticillium dahliae"
Strain="12008"
# ncbi_tbl_corrector script options:
# SubmissionID is from the email that got when you registrated BioProject
SubmissionID="BJF96"
LabID="ArmitageEMR"
# GeneSource='ab initio prediction:Braker:1.9, CodingQuary:2.0'
# IDSource='similar to AA sequence:SwissProt:2016_07'
# IDSource='similar to AA sequence:UniProtKB/Swiss-Prot'
# Final submisison file name:
FinalName="Vd12008_Fan_2016"
```

<!-- ## Preparing Gff input file

Parse the Augustus Gff file.
Transcripts should be renamed as mRNA features. Exons should be added to the
Gff and unique IDs should be given to all features in the file.

```bash
# cat $GffFile | sed 's/transcript/mRNA/g' > $OutDir/GffMRNA.gff
# $ProgDir/generate_tbl_file/exon_generator.pl $OutDir/GffMRNA.gff > $OutDir/corrected_exons.gff
# $ProgDir/generate_tbl_file/gff_add_id.py --inp_gff $OutDir/corrected_exons.gff --out_gff $OutDir/corrected_exons_id.gff
```

## Generating .tbl file (GAG)

The Genome Annotation Generator (GAG.py) can be used to convert gff files into
.tbl format, for use by tbl2asn.

It can also add annotations to features as provided by Annie the Annotation
extractor.


### Extracting annotations (Annie)

Interproscan and Swissprot annotations were extracted using annie, the
ANNotation Information Extractor. The output of Annie was filtered to
keep only annotations with references to ncbi approved databases.
Note - It is important that transcripts have been re-labelled as mRNA by this
point.
```bash
  python3 $AnnieDir/annie.py -ipr $InterProTab -g $GffFile -b $SwissProtBlast -db $SwissProtFasta -o $OutDir/annie_output.csv --fix_bad_products
  $ProgDir/edit_tbl_file/annie_corrector.py --inp_csv $OutDir/annie_output.csv --out_csv $OutDir/annie_corrected_output.csv
```

### Running GAG
Gag was run using the modified gff file as well as the annie annotation file.
Gag was noted to output database references incorrectly, so these were modified.

```bash
mkdir -p $OutDir/gag/round1
gag.py -f $Assembly -g $GffFile -a $OutDir/annie_corrected_output.csv -o $OutDir/gag/round1 --fix_start_stop 2>&1 | tee $OutDir/gag_log1.txt
sed -i 's/Dbxref/db_xref/g' $OutDir/gag/round1/genome.tbl
```
## tbl2asn round 1

tbl2asn was run an initial time to collect error reports on the current
formatting of the .tbl file.
Note - all input files for tbl2asn need to be in the same directory and have the
same basename.

```bash
  cp $Assembly $OutDir/gag/round1/genome.fsa
  cp $SbtFile $OutDir/gag/round1/genome.sbt
  mkdir -p $OutDir/tbl2asn/round1
  tbl2asn -p $OutDir/gag/round1/. -t $OutDir/gag/round1/genome.sbt -r $OutDir/tbl2asn/round1 -M n -Z discrep -j "[organism=$Organism] [strain=$Strain]"
```

## Editing .tbl file

The tbl2asn .val output files were observed and errors corrected. This was done
with an in house script. The .val file indicated that some cds had premature
stops, so these were marked as pseudogenes ('pseudo' - SEQ_FEAT.InternalStop)
and that some genes had cds coordinates that did not match the end of the gene
if the protein was hanging off a contig ('stop' - SEQ_FEAT.NoStop).
Furthermore a number of other edits were made to bring the .tbl file in line
with ncbi guidelines. This included: Marking the source of gene
predictions and annotations ('add_inference'); Correcting locus_tags to use the
given ncbi_id ('locus_tag'); Correcting the protein and transcript_ids to
include the locus_tag and reference to submitter/lab id ('lab_id'), removal of
annotated names of genes if you don't have high confidence in their validity
(--gene_id 'remove'). If 5'-UTR and 3'-UTR were not predicted during gene
annotation then genes, mRNA and exon features need to reflect this by marking
them as incomplete ('unknown_UTR').

```bash
  mkdir -p $OutDir/gag/edited
  $ProgDir/edit_tbl_file/ncbi_tbl_corrector.py --inp_tbl $OutDir/gag/round1/genome.tbl --inp_val $OutDir/tbl2asn/round1/genome.val --locus_tag $SubmissionID --lab_id $LabID --gene_id "remove" --add_inference "$IDSource" --edits stop pseudo unknown_UTR --out_tbl $OutDir/gag/edited/genome.tbl
  # $ProgDir/edit_tbl_file/ncbi_tbl_corrector.py --inp_tbl $OutDir/gag/round1/genome.tbl --inp_val $OutDir/tbl2asn/round1/genome.val --locus_tag $SubmissionID --lab_id $LabID --gene_id "remove" --add_inference "$GeneSource" "$IDSource" --edits stop pseudo unknown_UTR --out_tbl $OutDir/gag/edited/genome.tbl
```

```bash
  mkdir -p $OutDir/gag/edited2
  $ProgDir/edit_tbl_file/ncbi_tbl_corrector.py --inp_tbl $OutDir/gag/round1/genome.tbl --inp_val $OutDir/tbl2asn/round1/genome.val --locus_tag $SubmissionID --lab_id $LabID --gene_id "remove" --add_inference "$IDSource" --edits stop pseudo unknown_UTR --rename_genes "vAg" --out_tbl  $OutDir/gag/edited2/genome.tbl
```


## Generating a structured comment detailing annotation methods

```bash
printf "StructuredCommentPrefix\t##Genome-Annotation-Data-START##
Annotation Provider\tHarrison Lab NIAB-EMR
Annotation Date\tSEP-2016
Annotation Version\tRelease 1.01
Annotation Method\tAb initio gene prediction: Braker 1.9 and CodingQuary 2.0; Functional annotation: Swissprot (July 2016 release) and Interproscan 5.18-57.0" \
> $OutDir/gag/edited2/annotation_methods.strcmt.txt

```
## Final run of tbl2asn

Following correction of the GAG .tbl file, tbl2asn was re-run to provide the
final genbank submission file.

The options -l paired-ends -a r10k inform how to handle runs of Ns in the
sequence, these options show that paired-ends have been used to estimate gaps
and that runs of N's longer than 10 bp should be labelled as gaps.

```bash
  cp $Assembly $OutDir/gag/edited/genome.fsa
  cp $SbtFile $OutDir/gag/edited/genome.sbt
  mkdir $OutDir/tbl2asn/final
  tbl2asn -p $OutDir/gag/edited/. -t $OutDir/gag/edited/genome.sbt -r $OutDir/tbl2asn/final -M n -Z discrep -j "[organism=$Organism] [strain=$Strain]" -l paired-ends -a r10k -w $OutDir/gag/edited2/annotation_methods.strcmt.txt
  cp $OutDir/tbl2asn/final/genome.sqn $OutDir/tbl2asn/final/$FinalName.sqn
```

The final error report contained the following warnings. These were judged to be
legitimate concerns but biologically explainable.

    4 WARNING: SEQ_FEAT.NotSpliceConsensusAcceptor
     4 WARNING: SEQ_FEAT.NotSpliceConsensusDonor
    38 WARNING: SEQ_FEAT.PartialProblem
     5 WARNING: SEQ_FEAT.ProteinNameEndsInBracket
   147 WARNING: SEQ_FEAT.ShortExon
     1 INFO:    SEQ_FEAT.PartialProblem
   336 INFO:    SEQ_FEAT.RareSpliceConsensusDonor

Andy's
67 WARNING: SEQ_FEAT.PartialProblem
 5 WARNING: SEQ_FEAT.ProteinNameEndsInBracket
211 WARNING: SEQ_FEAT.ShortExon
18 WARNING: SEQ_FEAT.SuspiciousFrame
 5 INFO:    SEQ_FEAT.PartialProblem

 Note -
 *SEQ_FEAT.partial problem. In this case, upon investigation these genes were hannging
 off the end of a contig but did not have an mRNA feature that went off of the
 end of the contig. This was occuring due to an intron being predicted hanging
 off the contig. An example on the ncbi guidelines here shows this to be
 acceptable:
 http://www.ncbi.nlm.nih.gov/genbank/eukaryotic_genome_submission_annotation#Partialcodingregionsinincompletegenomes
 *SEQ_FEAT.ProteinNameEndsInBracket. These gene names include brackets for good
 reason

*****************************************************************************
Andy made some minor changes for the final submission script, so his new script was pasted here:

# Final Submission

These commands were used in the final submission of the FoN genome:


```bash
for Assembly in $(ls repeat_masked/V.dahliae/12008/ncbi_filtered_contigs_repmask/12008_contigs_unmasked.fa); do
# tbl2asn options:
Organism=$(echo $Assembly | rev | cut -f4 -d '/' | rev)
Strain=$(echo $Assembly | rev | cut -f3 -d '/' | rev)
#OrganismOfficial=$(echo $Organism | sed 's/F./Fusarium /g' | sed 's/_fsp_/ f.sp. /g')
#StrainOfficial=$(echo $Strain | sed 's/_ncbi//g')
ProjDir=/home/groups/harrisonlab/project_files/verticillium_dahliae/pathogenomic
OutDir="genome_submission/$Organism/$Strain"
mkdir -p $OutDir
done

# Program locations:
AnnieDir="/home/armita/prog/annie/genomeannotation-annie-c1e848b"
ProgDir="/home/armita/git_repos/emr_repos/tools/genbank_submission"
# File locations:
# Assembly=$(ls repeat_masked/$Organism/$Strain/ncbi_filtered_contigs_repmask/12008_contigs_unmasked.fa)
InterProTab=$(ls gene_pred/interproscan/$Organism/$Strain/"$Strain"_interproscan.tsv)
SwissProtBlast=$(ls gene_pred/swissprot/$Organism/$Strain/swissprot_vJul2016_tophit_parsed.tbl)
SwissProtFasta=$(ls /home/groups/harrisonlab/uniprot/swissprot/uniprot_sprot.fasta)
GffFile=$(ls gene_pred/final_genes/$Organism/$Strain/final/final_genes_appended.gff3)
SbtFile=genome_submission/V.dahliae/12008/template.sbt
BioProject="PRJNA344737"
BioSample="SAMN05832575"


# ncbi_tbl_corrector script options:
SubmissionID="BJF96"
LabID="ArmitageEMR"
# Final submisison file name:
FinalName="$Organism"_"$Strain"_Armitage_2016

python3 $AnnieDir/annie.py -ipr $InterProTab -g $GffFile -b $SwissProtBlast -db $SwissProtFasta -o $OutDir/annie_output.csv --fix_bad_products
$ProgDir/edit_tbl_file/annie_corrector.py --inp_csv $OutDir/annie_output.csv --out_csv $OutDir/annie_corrected_output.csv

mkdir -p $OutDir/gag/round1
gag.py -f $Assembly -g $GffFile -a $OutDir/annie_corrected_output.csv --fix_start_stop -o $OutDir/gag/round1 2>&1 | tee $OutDir/gag_log1.txt
sed -i 's/Dbxref/db_xref/g' $OutDir/gag/round1/genome.tbl

cp $Assembly $OutDir/gag/round1/genome.fsa
cp $SbtFile $OutDir/gag/round1/genome.sbt
mkdir -p $OutDir/tbl2asn/round1

tbl2asn -p $OutDir/gag/round1/. -t $OutDir/gag/round1/genome.sbt -r $OutDir/tbl2asn/round1 -M n -X E -Z $OutDir/gag/round1/discrep.txt -j "[organism=Verticillium dahliae] [strain=12008]"

mkdir -p $OutDir/gag/edited
$ProgDir/edit_tbl_file/ncbi_tbl_corrector.py --inp_tbl $OutDir/gag/round1/genome.tbl --inp_val $OutDir/tbl2asn/round1/genome.val --locus_tag $SubmissionID --lab_id $LabID --gene_id "remove" --edits stop pseudo unknown_UTR correct_partial --rename_genes "g" --remove_product_locus_tags "True" --out_tbl $OutDir/gag/edited/genome.tbl
printf "StructuredCommentPrefix\t##Genome-Annotation-Data-START##
Annotation Provider\tHarrison Lab NIAB-EMR
Annotation Date\tSEP-2016
Annotation Version\tRelease 1.01
Annotation Method\tAb initio gene prediction: Braker 1.9 and CodingQuary 2.0; Functional annotation: Swissprot (July 2016 release) and Interproscan 5.18-57.0" \
> $OutDir/gag/edited/annotation_methods.strcmt.txt

cp $Assembly $OutDir/gag/edited/genome.fsa
cp $SbtFile $OutDir/gag/edited/genome.sbt
mkdir $OutDir/tbl2asn/final
tbl2asn -p $OutDir/gag/edited/. -t $OutDir/gag/edited/genome.sbt -r $OutDir/tbl2asn/final -M n -X E -Z $OutDir/tbl2asn/final/discrep.txt -j "[organism=Verticillium dahliae] [strain=12008]" -l paired-ends -a r10k -w $OutDir/gag/edited/annotation_methods.strcmt.txt
cat $OutDir/tbl2asn/final/genome.sqn | sed 's/_pilon//g' | sed 's/\. subunit/kDa subunit/g' | sed 's/, mitochondrial//g' > $OutDir/tbl2asn/final/$FinalName.sqn

```

```bash
for File in $(ls genome_submission/V.*/*/tbl2asn/final/errorsummary.val | grep '12008'); do
Organism=$(echo $File | rev | cut -f5 -d '/' | rev);
Strain=$(echo $File | rev | cut -f4 -d '/' | rev);
echo "$Organism - $Strain";
cat $File;
echo "Duplicated genes:"
cat genome_submission/$Organism/$Strain/tbl2asn/round1/genome.val | grep 'DuplicateFeat' | cut -f4 -d ':' | cut -f2 -d' '
echo "";
done > genome_submission/Vd12008_isolate_errors.txt
```


The final error report contained the following warnings. These were judged to be
legitimate concerns but biologically explainable.

V.dahliae - 12008
     4 WARNING: SEQ_FEAT.NotSpliceConsensusAcceptor
     4 WARNING: SEQ_FEAT.NotSpliceConsensusDonor
    38 WARNING: SEQ_FEAT.PartialProblem
     5 WARNING: SEQ_FEAT.ProteinNameEndsInBracket
   147 WARNING: SEQ_FEAT.ShortExon
     1 INFO:    SEQ_FEAT.PartialProblem
   336 INFO:    SEQ_FEAT.RareSpliceConsensusDonor



Andy's
67 WARNING: SEQ_FEAT.PartialProblem
 5 WARNING: SEQ_FEAT.ProteinNameEndsInBracket
211 WARNING: SEQ_FEAT.ShortExon
18 WARNING: SEQ_FEAT.SuspiciousFrame
 5 INFO:    SEQ_FEAT.PartialProblem

 Note -
 *SEQ_FEAT.partial problem. In this case, upon investigation these genes were hannging
 off the end of a contig but did not have an mRNA feature that went off of the
 end of the contig. This was occuring due to an intron being predicted hanging
 off the contig. An example on the ncbi guidelines here shows this to be
 acceptable:
 http://www.ncbi.nlm.nih.gov/genbank/eukaryotic_genome_submission_annotation#Partialcodingregionsinincompletegenomes
 *SEQ_FEAT.ProteinNameEndsInBracket. These gene names include brackets for good
 reason
